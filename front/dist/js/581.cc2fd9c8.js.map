{"version":3,"file":"js/581.cc2fd9c8.js","mappings":"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","sources":["webpack://front/./src/views/Book/CoverView.vue","webpack://front/./src/views/Book/CoverView.vue?d33c","webpack://front/./src/stores/book.js"],"sourcesContent":["<template>\n    <div>\n        <p class=\"text-[1.5rem] mb-[4.6875rem]\">Выберите цвет обложки</p>\n\n        <div class=\"flex flex-wrap\">\n            <div\n                v-for=\"cover in covers\"\n                :key=\"cover.id\"\n                class=\"w-1/2 pr-[2.875rem] mb-[2.875rem] cursor-pointer hover:scale-[1.02] transition\"\n                :class=\"{'animate-pulse': cover.id === store.book.cover_type_id}\"\n                @click=\"choose(cover.id)\"\n            >\n                <img class=\"w-full\" :src=\"cover.image_link\" alt=\"book\">\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport {useBookStore} from \"@/stores/book\";\n\nexport default {\n    name: \"CoverView\",\n\n    data: () => ({\n        store: useBookStore(),\n\n        covers: []\n    }),\n\n    methods: {\n        async getCovers() {\n            await this.store.getCovers().then(() => {\n                this.covers = this.store.covers\n            })\n        },\n\n        choose(coverId) {\n            this.store.saveCover(this.store.book.id, coverId)\n            this.$router.push('/client/book/title')\n        }\n    },\n\n    mounted() {\n        this.getCovers()\n    }\n}\n</script>","import { render } from \"./CoverView.vue?vue&type=template&id=1fcf82b5\"\nimport script from \"./CoverView.vue?vue&type=script&lang=js\"\nexport * from \"./CoverView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {defineStore} from \"pinia\";\n\nexport const useBookStore = defineStore(\"book\", {\n  state: () => {\n    return {\n      book: null,\n      chapter: null,\n      chapters: [],\n      covers: [],\n    }\n  },\n  actions: {\n    setBook(book) {\n      this.book = book\n    },\n\n    setChapter(chapter) {\n      this.chapter = chapter\n    },\n\n    setChapters(chapters) {\n      this.chapters = chapters\n    },\n\n    setCovers(covers) {\n      this.covers = covers\n    },\n\n    async fetchBookById(bookId) {\n      await this.$axios.get(`/book/${bookId}`)\n        .then(response => {\n          this.setBook(response.data.book)\n        })\n    },\n\n    async fetchBookByUserId(userId) {\n      await this.$axios.get(`/book/user/${userId}`)\n        .then(response => {\n          this.setBook(response.data.book)\n        })\n    },\n\n    async upsertQuestionnaire(bookId, payload) {\n      await this.$axios.post(`/book/${bookId}/questionnaire`, payload)\n        .then(response => {\n          alert('Ваша анкета успешно сохранена')\n          let book = response.data.book\n          this.setBook(book)\n          this.$router.push('/')\n        })\n    },\n\n    async getCovers() {\n      await this.$axios.get('/book/covers')\n        .then(response => {\n          this.setCovers(response.data.covers)\n        })\n    },\n\n    async saveCover(bookId, coverId) {\n      await this.$axios.post(`/book/${bookId}/cover`, {cover_type_id: coverId})\n        .then(response => {\n          this.setBook(response.data.book)\n        })\n    },\n\n    async getChapters(bookId) {\n      await this.$axios.get(`/book/${bookId}/chapters`)\n        .then(response => {\n          this.setChapters(response.data)\n        })\n    },\n\n    async saveTitle(bookId, payload) {\n      await this.$axios.post(`/book/${bookId}/title`, payload)\n        .then(response => {\n          alert(response.data.message)\n          this.setBook(response.data.book)\n        })\n    },\n\n    async getChapter(chapterId) {\n      return await this.$axios.get(`/chapter/${chapterId}`).then(response => {\n        this.setChapter(response.data.chapter)\n        return response.data\n      })\n    },\n\n    async saveChapter(chapterId, text) {\n      await this.$axios.post(`/chapter/${chapterId}`, {text: text}).then(response => {\n        alert(response.data.message)\n      })\n    },\n\n    async generatePDF(bookId) {\n      await this.$axios.get(`/book/${bookId}/pdf`, {\n        responseType: 'blob'\n      }).then(response => {\n        // create file link in browser's memory\n        const href = URL.createObjectURL(response.data);\n\n        // create \"a\" HTML element with href to file & click\n        const link = document.createElement('a');\n        link.href = href;\n        link.setAttribute('download', 'file.pdf'); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n\n        // clean up \"a\" element & remove ObjectURL\n        document.body.removeChild(link);\n        URL.revokeObjectURL(href);\n      })\n    },\n\n    async closeBook(bookId) {\n      return await this.$axios.post(`/book/${bookId}/close`).then(response => {\n        return response.data.message\n      })\n    },\n\n    async toggleBook(bookId) {\n      await this.$axios.post(`/book/${bookId}/toggle`).then(response => {\n        alert(response.data.message)\n      })\n    },\n\n    async getTotalPages(bookId) {\n      return await this.$axios.get(`/book/${bookId}/total-pages`).then(response => {\n        return response.data.total_pages\n      })\n    },\n\n    async addImage(chapterId, image) {\n      let formData = new FormData()\n      formData.append('image', image)\n\n      return await this.$axios.post(`/chapter/${chapterId}/image`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        return response.data.url\n      })\n    }\n  }\n})"],"names":["class","covers","cover","key","id","store","book","cover_type_id","choose","src","image_link","alt","name","data","methods","getCovers","this","then","coverId","saveCover","$router","push","mounted","__exports__","render","useBookStore","state","chapter","chapters","actions","setBook","setChapter","setChapters","setCovers","fetchBookById","bookId","$axios","get","response","fetchBookByUserId","userId","upsertQuestionnaire","payload","post","alert","getChapters","saveTitle","message","getChapter","chapterId","saveChapter","text","generatePDF","responseType","href","URL","createObjectURL","link","document","createElement","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","closeBook","toggleBook","getTotalPages","total_pages","addImage","image","formData","FormData","append","headers","url"],"sourceRoot":""}